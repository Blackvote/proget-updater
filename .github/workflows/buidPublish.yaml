name: Build and Publish Updater_go

on:
  push:
    branches:
      - main

jobs:
  release-please:
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    runs-on:
      - ubuntu-latest
    steps:
    - uses: googleapis/release-please-action@v4
      id: release-please

      with:
        release-type: simple
    - name: echo
      run: |
        echo "release_created: ${{ steps.release-please.outputs.release_created }}"

  echo:
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo "release_created: ${{ needs.release-please.outputs.release_created }}"

  build:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on:
      - ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22.x'

    - name: Install dependencies
      run: go mod tidy

    - name: Build
      run: |
        mkdir -p build
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/updater_${{ github.ref_name }}_${{ matrix.goos }}${{ matrix.goos == 'windows' && '.exe' || '' }}

    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: updater_${{ github.ref_name }}_${{ matrix.goos }}
    #     path: build/updater_${{ github.ref_name }}_${{ matrix.goos }}${{ matrix.goos == 'windows' && '.exe' || '' }}

    # - name: Download Linux Artifact
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: updater_${{ github.ref_name }}_linux
    #     path: .

    # - name: Download Windows Artifact
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: updater_${{ github.ref_name }}_windows
    #     path: .
        
    - name: Upload Release Artifact
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ls -la build/
        gh release upload ${{ steps.release-please.outputs.tag_name }} build/updater_${{ github.ref_name }}_${{ matrix.goos }}${{ matrix.goos == 'windows' && '.exe' || '' }}
