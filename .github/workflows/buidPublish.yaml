name: Build and Publish Updater_go

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on:
      - ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22.x'

    - name: Install dependencies
      run: go mod tidy

    - name: Build
      run: |
        mkdir -p build
        if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; else EXT=""; fi
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/updater_${{ github.ref_name }}_${{ matrix.goos }}$EXT


    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: updater_${{ github.ref_name }}_${{ matrix.goos }}
        path: build/updater_${{ github.ref_name }}_${{ matrix.goos }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    runs-on:
      - ubuntu-latest
    needs: build
    steps:
    - uses: googleapis/release-please-action@v4
      id: release
      with:
        config-file: release-please-config.json

    - name: Checkout code
      if: ${{ steps.release.outputs.release_created }}
      uses: actions/checkout@v2

    - name: Download Linux Artifact
      if: ${{ steps.release.outputs.release_created }}
      uses: actions/download-artifact@v2
      with:
        name: updater_${{ github.ref_name }}_linux
        path: .

    - name: Download Windows Artifact
      if: ${{ steps.release.outputs.release_created }}
      uses: actions/download-artifact@v2
      with:
        name: updater_${{ github.ref_name }}_windows
        path: .
        
    - uses: ncipollo/release-action@v1
      if: ${{ steps.release.outputs.release_created }}
      with:
        artifacts: |
          updater_${{ github.ref_name }}_linux
          updater_${{ github.ref_name }}_windows.exe
        token: ${{ secrets.GITHUB_TOKEN }}
        name: "Release ${{ github.ref_name }}"
        tag: ${{ github.ref_name }}
        body: |
          Release of updater version ${{ github.ref_name }}.
          Dont forget to create "config.yml" (./config.example.yml).
        draft: false
        prerelease: false
